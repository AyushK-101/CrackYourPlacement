void gameOfLife(vector<vector<int>>& boards) {
        vector<pair<int, int>> directions = {{-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 1}, {1, -1}, {1, 0}, {1, 1}};

        for(int i = 0; i < boards.size(); ++i) {
        for(int j = 0; j < boards[0].size(); ++j) {
            int cnt = 0;

            // Count live neighbors
            for(auto& dir : directions) {
                int ni = i + dir.first;
                int nj = j + dir.second;
                if(ni >= 0 && ni <boards.size() && nj >= 0 && nj < boards[0].size() && (boards[ni][nj] == 1 || boards[ni][nj] == -1)) {
                    cnt++;
                }
            }
                    if(boards[i][j]==1 || boards[i][j]==-1){
                        if(cnt==2 || cnt==3) boards[i][j]=1;
                        else boards[i][j]=-1;
                    }
                    else {
                        if(cnt==3) boards[i][j]=2;
                        else boards[i][j]=0;
                    }
            }
        }

        for(int i=0;i<boards.size();i++){
            for(int j=0;j<boards[0].size();j++){
                if(boards[i][j]==-1) boards[i][j]=0;
                if(boards[i][j]==2) boards[i][j]=1;
            }}
    }
